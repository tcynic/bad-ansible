---
- name: Common Configuration
  hosts: all
  gather_facts: false
  become: true
  roles:
  - three_tier_common

- name: deploy haproxy
  hosts: frontends,apps
  gather_facts: true
  become: true
  tasks:
  - include_role:
      name: three_tier_frontend
    when: >-
      'frontends' in group_names

- name: deploy tomcat
  hosts: apps
  gather_facts: false
  become: true

  tasks:
  - name: install tomcat
    package:
      name: tomcat
      state: latest
  - name: enable tomcat at boot
    service:
      name: tomcat
      enabled: yes

  - name: create ansible tomcat directory
    file:
      path: /usr/share/tomcat/webapps/ROOT
      state: directory

  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.j2
      dest: /usr/share/tomcat/webapps/ROOT/index.html
      mode: 0644

  - name: start tomcat
    service:
      name: tomcat
      state: started

- name: index.html on app 1
  hosts: app1
  gather_facts: false
  become: true

  tasks:
  - name: create ansible tomcat directory
    file:
      path: /usr/share/tomcat/webapps/ansible
      state: directory

  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app1
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: index.html on app 1
  hosts: app2
  gather_facts: false
  become: true

  tasks:
  - name: create ansible tomcat directory
    file:
      path: /usr/share/tomcat/webapps/ansible
      state: directory

  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app2
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: deploy postgres
  hosts: apps
  gather_facts: false
  become: true
  hosts: appdbs
  tasks:
  - name: install postgres
    yum:
      name: postgresql-server
      state: latest
  - name: enable postgresql at boot
    service:
      name: postgresql
      enabled: yes

 # only run the next 2 tasks once!
  - name: initilize postgres
    command: postgresql-setup initdb
    register: r_postgres_init
    failed_when: >-
      r_postgres_init.rc != 0 and
      r_postgres_init.stdout != 'Data directory is not empty!'


#  - name: initilize postgres some more
#    command: chkconfig postgresql on
  - name: start postgres
    service:
      name: postgresql.service
      state: started

- name: deploy apache
  hosts: apps
  gather_facts: false
  become: true
  hosts: apps
  tasks:
  - name: install apache
    yum:
      name: httpd
      state: latest
  - name: start and enable apache at boot
    service:
      name: httpd
      enabled: yes
      state: started
